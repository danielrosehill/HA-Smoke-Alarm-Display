alias: "Low Battery Alert - Safety Devices"
description: "Notify when smoke or CO detector batteries are low"
trigger:
  # Numeric sensors
  - platform: numeric_state
    entity_id:
      - sensor.bedroom_smoke_sensor_battery
      - sensor.office_smoke_detector_battery
      - sensor.living_room_smoke_detector_battery
      - sensor.carbon_monoxide_alarm_battery
    below: 10
  # Binary sensor for kitchen (special case)
  - platform: state
    entity_id: binary_sensor.kitchensmokedetector_battery_low
    to: "on"

condition:
  # Avoid notification spam by checking if the battery is not "unknown" or "unavailable"
  - condition: template
    value_template: >-
      {{ not is_state(trigger.entity_id, 'unknown') and 
         not is_state(trigger.entity_id, 'unavailable') }}

action:
  - service: persistent_notification.create
    data:
      title: "⚠️ Low Battery Alert"
      message: >-
        {{ trigger.to_state.attributes.friendly_name }} is at 
        {% if trigger.entity_id == 'binary_sensor.kitchensmokedetector_battery_low' %}
        a low level
        {% else %}
        {{ trigger.to_state.state }}%
        {% endif %}
        and needs attention!
  
  - service: notify.mobile_app_your_phone_name  # Replace with your actual mobile app notify service
    data:
      title: "⚠️ Low Battery Alert"
      message: >-
        {{ trigger.to_state.attributes.friendly_name }} is at 
        {% if trigger.entity_id == 'binary_sensor.kitchensmokedetector_battery_low' %}
        a low level
        {% else %}
        {{ trigger.to_state.state }}%
        {% endif %}
      data:
        priority: high
        channel: Safety  # Optional: Create a specific notification channel for safety alerts

  # Optional: Repeat notification every 24 hours until fixed
  - service: script.turn_on
    target:
      entity_id: script.battery_reminder